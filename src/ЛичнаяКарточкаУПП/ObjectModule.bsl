#Область ПрограммныйИнтерфейс

Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок = Ложь, ВысотаЗаголовка = 0, ТолькоЗаголовок = Ложь, ОчищатьТабличныйДокумент = Истина) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ДатаОтчета) Тогда
		
		Сообщить("Не указана дата отчета!", СтатусСообщения.Важное);
		Возврат;
		
	КонецЕсли;
	
	ДокументРезультат.Очистить();
	
	Макет 			  		 = ПолучитьМакет("Макет");
	ОбластьШапка	  		 = Макет.ПолучитьОбласть("ШапкаЛицевойСтороны");
	ОбластьШапкаТЧ	  		 = Макет.ПолучитьОбласть("ШапкаОбратнойСтроны");
	ОбластьСтрокаНорм  		 = Макет.ПолучитьОбласть("СтрокаЛицевойСтороны");
	ОбластьПодвал	  		 = Макет.ПолучитьОбласть("Подвал");
	
	ТаблВыданнойСпецодежды = ПолучитьТаблицуВыданнойСпецодежды();
	
	ТаблицаНормСпецодежды = ТаблВыданнойСпецодежды.Скопировать();
	ТаблицаНормСпецодежды.Свернуть("Номенклатура,ФизЛицо,Организация,НазначениеИспользования");
	
	//Определим список физических лиц 
	ТаблицаСотрудников = ТаблВыданнойСпецодежды.Скопировать();
	ТаблицаСотрудников.Свернуть("Организация,Физлицо");
	ТаблицаСотрудников.Сортировать("Организация,Физлицо");
	
	ТаблицаПараметров = ПолучитьТаблицуПараметровСотрудников();
	
	Для каждого СтрокаТаблицаСотрудников Из ТаблицаСотрудников Цикл
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Организация",СтрокаТаблицаСотрудников.Организация);
		СтруктураПоиска.Вставить("Физлицо",СтрокаТаблицаСотрудников.Физлицо);
		
		//Выводим шапку лицевой стороны
		ОбластьШапка = Макет.ПолучитьОбласть("ШапкаЛицевойСтороны");
		
		НайденныеСтроки = ТаблицаНормСпецодежды.НайтиСтроки(СтруктураПоиска);
		ТаблОтбора = ТаблицаНормСпецодежды.Скопировать(НайденныеСтроки);
		ТаблОтбора.Сортировать("Физлицо");
		Если ТаблОтбора.Количество() > 0 Тогда
			ЗаполнитьЗначенияСвойств(ОбластьШапка.Параметры,ТаблОтбора[0]);
		КонецЕсли; 
		
		ОбластьШапка.Параметры.НазваниеОтраслевойНормы = ТиповыеНормы;
		
		//Определяем последнюю дату изменения должности
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Организация",СтрокаТаблицаСотрудников.Организация);
		СтруктураПоиска.Вставить("Физлицо",СтрокаТаблицаСотрудников.Физлицо);
		
		НайденныеСтроки = ТаблицаПараметров.НайтиСтроки(СтруктураПоиска);
		ТаблОтбора = ТаблицаПараметров.Скопировать(НайденныеСтроки);
		ТаблОтбора.Сортировать("Регистратор Убыв");
		Для каждого СтрокаТаблОтбора Из ТаблОтбора Цикл
			Если ТипЗнч(СтрокаТаблОтбора.Регистратор)=Тип("ДокументСсылка.КадровоеПеремещениеОрганизаций") Тогда	
				ОбластьШапка.Параметры.ДатаДолжностьПеремещения = Формат(СтрокаТаблОтбора.Регистратор.Дата,"ДЛФ=DD");
				ОбластьШапка.Параметры.ПодразделениеПеремещения = СокрЛП(СтрокаТаблОтбора.Должность);
				Прервать;
			КонецЕсли; 
		КонецЦикла; 
		ТаблОтбора.Сортировать("Регистратор Возр");
		Для каждого СтрокаТаблОтбора Из ТаблОтбора Цикл
			Если ТипЗнч(СтрокаТаблОтбора.Регистратор)=Тип("ДокументСсылка.ПриемНаРаботуВОрганизацию") Тогда	
				ОбластьШапка.Параметры.ПодразделениеПриема = СокрЛП(СтрокаТаблОтбора.ПодразделениеОрганизации);
				Для каждого СтрокаРаботникиОрганизации Из СтрокаТаблОтбора.Регистратор.РаботникиОрганизации Цикл
					Если СтрокаРаботникиОрганизации.ФизЛицо = СтрокаТаблицаСотрудников.Физлицо Тогда
						ОбластьШапка.Параметры.ДатаПриема = Формат(СтрокаРаботникиОрганизации.ДатаПриема,"ДЛФ=DD");
					КонецЕсли; 
				КонецЦикла; 
				Прервать;
			КонецЕсли; 
		КонецЦикла;
		
		ДанныеФизЛица = ОбщегоНазначения.ДанныеФизЛица(СтрокаТаблицаСотрудников.Организация, СтрокаТаблицаСотрудников.Физлицо, Датаотчета, Ложь);
		ЗаполнитьЗначенияСвойств(ОбластьШапка.Параметры,ДанныеФизЛица);
		
		ОбластьШапка.Параметры.Пол = СтрокаТаблицаСотрудников.Физлицо.Пол;
		
		//Определим размеры СИЗ Физ. лица
		ЗапросРазм = Новый Запрос;
		ЗапросРазм.УстановитьПараметр("ФизЛицо", СтрокаТаблицаСотрудников.Физлицо);
		
		ЗапросРазм.Текст = 
		"ВЫБРАТЬ
		|	ЗначенияСвойствОбъектов.Свойство,
		|	ЗначенияСвойствОбъектов.Значение
		|ИЗ
		|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|ГДЕ
		|	ЗначенияСвойствОбъектов.Объект = &ФизЛицо";
		РезультатЗапроса =  ЗапросРазм.Выполнить();
		ТаблРазмеров = РезультатЗапроса.Выгрузить();
		
		Для каждого СтрокаТаблРазмеров Из ТаблРазмеров Цикл
			
			Если СтрокаТаблРазмеров.Свойство.Наименование = "Рост" Тогда
				ОбластьШапка.Параметры.Рост = СтрокаТаблРазмеров.Значение;
			ИначеЕсли СтрокаТаблРазмеров.Свойство.Наименование = "Размер одежды" Тогда	
				ОбластьШапка.Параметры.РазмерОдежды = СтрокаТаблРазмеров.Значение;
			ИначеЕсли СтрокаТаблРазмеров.Свойство.Наименование = "Размер обуви" Тогда	
				ОбластьШапка.Параметры.РазмерОбуви = СтрокаТаблРазмеров.Значение;
			ИначеЕсли СтрокаТаблРазмеров.Свойство.Наименование = "Размер головного убора" Тогда	
				ОбластьШапка.Параметры.РазмерГоловногоУбора = СтрокаТаблРазмеров.Значение;
			ИначеЕсли СтрокаТаблРазмеров.Свойство.Наименование = "Размер противогаза" Тогда	
				ОбластьШапка.Параметры.РазмерПротивогаза = СтрокаТаблРазмеров.Значение;
			ИначеЕсли СтрокаТаблРазмеров.Свойство.Наименование = "Размер респиратора" Тогда	
				ОбластьШапка.Параметры.РазмерРеспиратора = СтрокаТаблРазмеров.Значение;
			ИначеЕсли СтрокаТаблРазмеров.Свойство.Наименование = "Размер рукавиц" Тогда	
				ОбластьШапка.Параметры.РазмерРукавиц = СтрокаТаблРазмеров.Значение;
			ИначеЕсли СтрокаТаблРазмеров.Свойство.Наименование = "Размер перчаток" Тогда	
				ОбластьШапка.Параметры.РазмерПерчаток = СтрокаТаблРазмеров.Значение;
			КонецЕсли; 
			
		КонецЦикла; 
		
		Если ДокументРезультат.ВысотаТаблицы <> 0 Тогда
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли; 
		
		ДокументРезультат.Вывести(ОбластьШапка);
		
		//Выводим нормативы выдачи спецодежды
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Организация",СтрокаТаблицаСотрудников.Организация);
		СтруктураПоиска.Вставить("Физлицо",СтрокаТаблицаСотрудников.Физлицо);
		
		НайденныеСтроки = ТаблицаНормСпецодежды.НайтиСтроки(СтруктураПоиска);
		ТаблОтбора = ТаблицаНормСпецодежды.Скопировать(НайденныеСтроки);
		ТаблОтбора.Сортировать("Номенклатура");
		Для каждого СтрокаТаблОтбора Из ТаблОтбора Цикл
			ОбластьСтрокаНорм = Макет.ПолучитьОбласть("СтрокаЛицевойСтороны");
			ЗаполнитьЗначенияСвойств(ОбластьСтрокаНорм.Параметры,СтрокаТаблОтбора);
			Если СтрокаТаблОтбора.НазначениеИспользования.СрокПолезногоИспользования = 0 Тогда
				ОбластьСтрокаНорм.Параметры.СрокПолезногоИспользования = "бессроч.";
			Иначе	
				ОбластьСтрокаНорм.Параметры.СрокПолезногоИспользования = Окр(12/СтрокаТаблОтбора.НазначениеИспользования.СрокПолезногоИспользования,2)*СтрокаТаблОтбора.НазначениеИспользования.Количество;
			КонецЕсли; 
			ОбластьСтрокаНорм.Параметры.ЕдиницаИзмерения = СтрокаТаблОтбора.Номенклатура.БазоваяЕдиницаИзмерения;
			ДокументРезультат.Вывести(ОбластьСтрокаНорм);
		КонецЦикла; 
		
		ДанныеФизЛица = ОбщегоНазначения.ДанныеФизЛица(СтрокаТаблицаСотрудников.Организация, ОтветственноеЛицо.Физлицо, Датаотчета, Истина);
		ЗаполнитьЗначенияСвойств(ОбластьПодвал.Параметры,ДанныеФизЛица);
		ОбластьПодвал.Параметры.Должность = "Руководитель структурного подразделения";
		ДокументРезультат.Вывести(ОбластьПодвал);
		
		//Оборотная сторона карточки
		ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		ДокументРезультат.Вывести(ОбластьШапкаТЧ);
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Организация",СтрокаТаблицаСотрудников.Организация);
		СтруктураПоиска.Вставить("Физлицо",СтрокаТаблицаСотрудников.Физлицо);
		
		НайденныеСтроки = ТаблВыданнойСпецодежды.НайтиСтроки(СтруктураПоиска);
		ТаблОтбора = ТаблВыданнойСпецодежды.Скопировать(НайденныеСтроки);
		ТаблОтбора.Сортировать("ДатаВыдачи Возр, Номенклатура");
		Для каждого СтрокаТаблОтбора Из ТаблОтбора Цикл
			Если ПодставлятьНомераВедомостей Тогда
				ОбластьСтрокаТЧ	= Макет.ПолучитьОбласть("СтрокаОбратнойСтороныСПодписями");
			Иначе
				ОбластьСтрокаТЧ	= Макет.ПолучитьОбласть("СтрокаОбратнойСтороны");
			КонецЕсли;	
			
			ЗаполнитьЗначенияСвойств(ОбластьСтрокаТЧ.Параметры,СтрокаТаблОтбора);
			Если ЗначениеЗаполнено(СтрокаТаблОтбора.ДатаВыбытия) Тогда
				ОбластьСтрокаТЧ.Параметры.ПроцентИзноса = РассчитатьПроцентИзноса(СтрокаТаблОтбора.НазначениеИспользования,СтрокаТаблОтбора.ДатаВыдачи,СтрокаТаблОтбора.ДатаВыбытия);
			Иначе	
				ОбластьСтрокаТЧ.Параметры.ДатаВыбытия = "";
				ОбластьСтрокаТЧ.Параметры.ПроцентИзноса = 0;
			КонецЕсли; 
			Если ПодставлятьНомераВедомостей Тогда
				Если ЗначениеЗаполнено(СтрокаТаблОтбора.ДокументВыдачи) Тогда
					ОбластьСтрокаТЧ.Параметры.ДокументВыдачи = "Вед.№"+СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(СтрокаТаблОтбора.ДокументВыдачи))+" от "+Формат(СтрокаТаблОтбора.ДокументВыдачи.Дата,"ДФ=dd.MM.yyyy");
				КонецЕсли; 
				Если ЗначениеЗаполнено(СтрокаТаблОтбора.ДокументВыбытия) Тогда
					ОбластьСтрокаТЧ.Параметры.ДокументВыбытия = "Вед.№"+СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(СтрокаТаблОтбора.ДокументВыбытия))+" от "+Формат(СтрокаТаблОтбора.ДокументВыбытия.Дата,"ДФ=dd.MM.yyyy");
				КонецЕсли; 
			КонецЕсли; 
			ДокументРезультат.Вывести(ОбластьСтрокаТЧ);
		КонецЦикла; 
		
		ДокументРезультат.Вывести(ОбластьПодвал);
	КонецЦикла; 
	
	ДокументРезультат.ТолькоПросмотр = Истина;
	ДокументРезультат.Автомасштаб = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьТаблицуПараметровСотрудников()
	
	ЗапросСПО = Новый Запрос;
	
	Если ОтборОрганизации Тогда
		
		Если ТипЗнч(Организация) = Тип("СправочникСсылка.Организации") Тогда
			ЗапросСПО.УстановитьПараметр("ГоловнаяОрганизация", ОбщегоНазначения.ГоловнаяОрганизация(Организация));
		Иначе
			
			Запрос = Новый Запрос(
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	ВЫБОР КОГДА Организации.ГоловнаяОрганизация = &парамПустаяОрганизация ТОГДА Организации.Ссылка ИНАЧЕ Организации.ГоловнаяОрганизация КОНЕЦ КАК ГоловнаяОрганизация
			|ИЗ
			|	Справочник.Организации КАК Организации
			|
			|ГДЕ
			|	Организации.Ссылка В(&парамОрганизация)");
			
			ЗапросСПО.УстановитьПараметр("ГоловнаяОрганизация", Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ГоловнаяОрганизация"));
			
		КонецЕсли;
		
		Если ВидСравненияОрганизации = ВидСравнения.Равно Тогда
			ВидСравненияОрганизацииСтрокой = "=" 
		ИначеЕсли ВидСравненияОрганизации = ВидСравнения.НеРавно Тогда
			ВидСравненияОрганизацииСтрокой = "<>"
		ИначеЕсли ВидСравненияОрганизации = ВидСравнения.ВСписке Тогда
			ВидСравненияОрганизацииСтрокой = "В"
		Иначе
			ВидСравненияОрганизацииСтрокой = "НЕ В"
		КонецЕсли; 
		
	КонецЕсли;
	
	
	ЗапросСПО.УстановитьПараметр("ДатаОтчета", КонецДня(ДатаОтчета));
	
	ЗапросСПО.Текст = 
	"ВЫБРАТЬ
	|	РаботникиОрганизацийСрезПоследних.Регистратор КАК Регистратор,
	|	РаботникиОрганизацийСрезПоследних.Сотрудник.Физлицо КАК Физлицо,
	|	РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации,
	|	РаботникиОрганизацийСрезПоследних.Должность,
	|	РаботникиОрганизацийСрезПоследних.Организация
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаОтчета, ) КАК РаботникиОрганизацийСрезПоследних
	|ГДЕ
	|	ИСТИНА
	|	И РаботникиОрганизацийСрезПоследних.Организация = &Организация
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор УБЫВ";
	
	// ограничение срезов
	Если ОтборОрганизации Тогда
		ЗапросСПО.Текст = СтрЗаменить(ЗапросСПО.Текст, ".Организация = &Организация", ".Организация " + ВидСравненияОрганизацииСтрокой + " (&ГоловнаяОрганизация)");		 
	Иначе
		ЗапросСПО.Текст = СтрЗаменить(ЗапросСПО.Текст, "И РаботникиОрганизацийСрезПоследних.Организация = &Организация", "");		 
	КонецЕсли;	
	
	РезультатЗапроса =  ЗапросСПО.Выполнить();
	ТаблПараметров = РезультатЗапроса.Выгрузить();
	
	Возврат ТаблПараметров;
	
КонецФункции 

Функция ПолучитьТаблицуВыданнойСпецодежды()
	
	ЗапросСПО = Новый Запрос;
	
	Если ОтборОрганизации Тогда
		
		Если ТипЗнч(Организация) = Тип("СправочникСсылка.Организации") Тогда
			ЗапросСПО.УстановитьПараметр("ГоловнаяОрганизация", ОбщегоНазначения.ГоловнаяОрганизация(Организация));
		Иначе
			
			Запрос = Новый Запрос(
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	ВЫБОР КОГДА Организации.ГоловнаяОрганизация = &парамПустаяОрганизация ТОГДА Организации.Ссылка ИНАЧЕ Организации.ГоловнаяОрганизация КОНЕЦ КАК ГоловнаяОрганизация
			|ИЗ
			|	Справочник.Организации КАК Организации
			|
			|ГДЕ
			|	Организации.Ссылка В(&парамОрганизация)");
			Запрос.УстановитьПараметр("парамОрганизация", Организация);
			Запрос.УстановитьПараметр("парамПустаяОрганизация", Справочники.Организации.ПустаяСсылка());
			
			ЗапросСПО.УстановитьПараметр("ГоловнаяОрганизация", Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ГоловнаяОрганизация"));
			
		КонецЕсли;
		
		Если ВидСравненияОрганизации = ВидСравнения.Равно Тогда
			ВидСравненияОрганизацииСтрокой = "=" 
		ИначеЕсли ВидСравненияОрганизации = ВидСравнения.НеРавно Тогда
			ВидСравненияОрганизацииСтрокой = "<>"
		ИначеЕсли ВидСравненияОрганизации = ВидСравнения.ВСписке Тогда
			ВидСравненияОрганизацииСтрокой = "В"
		Иначе
			ВидСравненияОрганизацииСтрокой = "НЕ В"
		КонецЕсли; 
		
	КонецЕсли;
	
	
	Если ОтборРаботника Тогда
		
		ЗапросСПО.УстановитьПараметр("РаботникиОрганизации", Работник);
		
		
		Если ВидСравненияРаботника = ВидСравнения.Равно Тогда
			ВидСравненияРаботник = "=" 
		ИначеЕсли ВидСравненияРаботника = ВидСравнения.НеРавно Тогда
			ВидСравненияРаботник = "<>"
		ИначеЕсли ВидСравненияРаботника = ВидСравнения.ВСписке Тогда
			ВидСравненияРаботник = "В"
		ИначеЕсли ВидСравненияРаботника = ВидСравнения.НеВСписке Тогда
			ВидСравненияРаботник = "НЕ В"
		ИначеЕсли ВидСравненияРаботника = ВидСравнения.ВСпискеПоИерархии ИЛИ 
			ВидСравненияРаботника = ВидСравнения.ВИерархии Тогда
			ВидСравненияРаботник = "В ИЕРАРХИИ"
		ИначеЕсли ВидСравненияРаботника = ВидСравнения.НеВСпискеПоИерархии ИЛИ 
			ВидСравненияРаботника = ВидСравнения.НеВИерархии Тогда
			ВидСравненияРаботник = "НЕ В ИЕРАРХИИ"
		КонецЕсли; 
		
	КонецЕсли; 
	ЗапросСПО.УстановитьПараметр("ОтборРаботника", ОтборРаботника);	
	
	Если ОтборПодразделения Тогда
		
		ЗапросСПО.УстановитьПараметр("ПодразделениеОрганизации", Подразделение);
		
		Если ВидСравненияПодразделения = ВидСравнения.Равно Тогда
			ВидСравненияПодразделение = "= &ПодразделениеОрганизации" 
		ИначеЕсли ВидСравненияПодразделения = ВидСравнения.НеРавно Тогда
			ВидСравненияПодразделение = "<> &ПодразделениеОрганизации"
		ИначеЕсли ВидСравненияПодразделения = ВидСравнения.ВСписке Тогда
			ВидСравненияПодразделение = "В (&ПодразделениеОрганизации)"
		ИначеЕсли ВидСравненияПодразделения = ВидСравнения.НеВСписке Тогда
			ВидСравненияПодразделение = "НЕ В (&ПодразделениеОрганизации)"
		ИначеЕсли ВидСравненияПодразделения = ВидСравнения.ВСпискеПоИерархии ИЛИ 
			ВидСравненияПодразделения = ВидСравнения.ВИерархии Тогда
			ВидСравненияПодразделение = "В ИЕРАРХИИ (&ПодразделениеОрганизации)"
		ИначеЕсли ВидСравненияПодразделения = ВидСравнения.НеВСпискеПоИерархии ИЛИ 
			ВидСравненияПодразделения = ВидСравнения.НеВИерархии Тогда
			ВидСравненияПодразделение = "НЕ В ИЕРАРХИИ (&ПодразделениеОрганизации)"
		КонецЕсли; 
		
	КонецЕсли;
	
	//Определение параметра ГОСТ
	ЗапросПарам = Новый Запрос;
	ЗапросПарам.УстановитьПараметр("НазначениеСвойства", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Номенклатура);
	ЗапросПарам.УстановитьПараметр("Наименование", "ГОСТ");
	
	ЗапросПарам.Текст = 
	"ВЫБРАТЬ
	|	СвойстваОбъектов.Ссылка,
	|	СвойстваОбъектов.Наименование,
	|	СвойстваОбъектов.ТипЗначения,
	|	СвойстваОбъектов.Представление
	|ИЗ
	|	ПланВидовХарактеристик.СвойстваОбъектов КАК СвойстваОбъектов
	|ГДЕ
	|	СвойстваОбъектов.НазначениеСвойства = &НазначениеСвойства
	|	И СвойстваОбъектов.Наименование = &Наименование";
	ТабДопСвойств =  ЗапросПарам.Выполнить().Выгрузить();
	
	Если ТабДопСвойств.Количество() > 0 Тогда
		СвойствоГОСТ = ТабДопСвойств[0].Ссылка;
	Иначе	
		СвойствоГОСТ = ПланыВидовХарактеристик.СвойстваОбъектов.ПустаяСсылка();
	КонецЕсли;
	
	
	ЗапросСПО.УстановитьПараметр("ДатаОтчета", новый граница(КонецДня(ДатаОтчета), ВидГраницы.Включая));
	ЗапросСПО.УстановитьПараметр("ДатаПриема", НачалоДня(ДатаОтчета));
	ЗапросСПО.УстановитьПараметр("ДатаУвольнения", КонецДня(ДатаОтчета));
	ЗапросСПО.УстановитьПараметр("СвойствоГОСТ", СвойствоГОСТ);
	
	
	ЗапросСПО.Текст = 
	"ВЫБРАТЬ
	|	СотрудникиОрганизаций.Физлицо,
	|	СотрудникиОрганизаций.ТекущееПодразделениеОрганизации,
	|	СотрудникиОрганизаций.ТекущаяДолжностьОрганизации,
	|	СотрудникиОрганизаций.ДатаПриемаНаРаботу,
	|	СотрудникиОрганизаций.ДатаУвольнения,
	|	СотрудникиОрганизаций.Организация
	|ПОМЕСТИТЬ ФизЛица
	|ИЗ
	|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
	|ГДЕ
	|	СотрудникиОрганизаций.Актуальность = ИСТИНА
	|	И СотрудникиОрганизаций.Организация = &Организация
	|	И СотрудникиОрганизаций.ТекущееПодразделениеОрганизации = &Подразделение
	|	И СотрудникиОрганизаций.Физлицо = &РаботникиОрганизации
	|	И СотрудникиОрганизаций.ДатаПриемаНаРаботу <= &ДатаПриема
	|	И ВЫБОР
	|			КОГДА СотрудникиОрганизаций.ДатаУвольнения = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ СотрудникиОрганизаций.ДатаУвольнения >= &ДатаУвольнения
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Объект КАК Номенклатура,
	|	ЗначенияСвойствОбъектов.Свойство,
	|	ЗначенияСвойствОбъектов.Значение КАК СтрокаГОСТ
	|ПОМЕСТИТЬ ГОСТ
	|ИЗ
	|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|ГДЕ
	|	ЗначенияСвойствОбъектов.Свойство = &СвойствоГОСТ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПередачаМатериаловВЭксплуатациюМатериалы.Номенклатура,
	|	ПередачаМатериаловВЭксплуатациюМатериалы.ФизЛицо,
	|	ПередачаМатериаловВЭксплуатациюМатериалы.ХарактеристикаНоменклатуры,
	|	ПередачаМатериаловВЭксплуатациюМатериалы.Ссылка.Дата,
	|	ПередачаМатериаловВЭксплуатациюМатериалы.Ссылка,
	|	ПередачаМатериаловВЭксплуатациюМатериалы.НазначениеИспользования,
	|	ПередачаМатериаловВЭксплуатациюМатериалы.Количество
	|ПОМЕСТИТЬ ДокументыПередачи
	|ИЗ
	|	Документ.ПередачаМатериаловВЭксплуатацию.Материалы КАК ПередачаМатериаловВЭксплуатациюМатериалы
	|ГДЕ
	|	ПередачаМатериаловВЭксплуатациюМатериалы.Ссылка.Проведен = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВводНачальныхОстатковМатериаловВЭксплуатацииМатериалы.Номенклатура,
	|	ВводНачальныхОстатковМатериаловВЭксплуатацииМатериалы.ФизЛицо,
	|	ВводНачальныхОстатковМатериаловВЭксплуатацииМатериалы.ХарактеристикаНоменклатуры,
	|	ВводНачальныхОстатковМатериаловВЭксплуатацииМатериалы.Ссылка.Дата,
	|	ВводНачальныхОстатковМатериаловВЭксплуатацииМатериалы.Ссылка,
	|	ВводНачальныхОстатковМатериаловВЭксплуатацииМатериалы.НазначениеИспользования,
	|	ВводНачальныхОстатковМатериаловВЭксплуатацииМатериалы.ДокументПартии КАК ДокументВыдачи,
	|	ВводНачальныхОстатковМатериаловВЭксплуатацииМатериалы.Количество
	|ПОМЕСТИТЬ ДокументыВводаОстатков
	|ИЗ
	|	Документ.ВводНачальныхОстатковМатериаловВЭксплуатации.Материалы КАК ВводНачальныхОстатковМатериаловВЭксплуатацииМатериалы
	|ГДЕ
	|	ВводНачальныхОстатковМатериаловВЭксплуатацииМатериалы.Ссылка.Проведен = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПеремещениеМатериаловВЭксплуатацииМатериалы.Ссылка.Дата,
	|	ПеремещениеМатериаловВЭксплуатацииМатериалы.Ссылка,
	|	ПеремещениеМатериаловВЭксплуатацииМатериалы.ФизЛицоПолучатель,
	|	ПеремещениеМатериаловВЭксплуатацииМатериалы.НазначениеИспользованияПолучатель,
	|	ПеремещениеМатериаловВЭксплуатацииМатериалы.Номенклатура,
	|	ПеремещениеМатериаловВЭксплуатацииМатериалы.ХарактеристикаНоменклатуры,
	|	ПеремещениеМатериаловВЭксплуатацииМатериалы.ДокументПередачи КАК ДокументВыдачи,
	|	ПеремещениеМатериаловВЭксплуатацииМатериалы.Количество
	|ПОМЕСТИТЬ ДокументыПеремещенияПоступление
	|ИЗ
	|	Документ.ПеремещениеМатериаловВЭксплуатации.Материалы КАК ПеремещениеМатериаловВЭксплуатацииМатериалы
	|ГДЕ
	|	ПеремещениеМатериаловВЭксплуатацииМатериалы.Ссылка.Проведен = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПеремещениеМатериаловВЭксплуатацииМатериалы.Ссылка.Дата,
	|	ПеремещениеМатериаловВЭксплуатацииМатериалы.Ссылка,
	|	ПеремещениеМатериаловВЭксплуатацииМатериалы.ФизЛицо,
	|	ПеремещениеМатериаловВЭксплуатацииМатериалы.НазначениеИспользования,
	|	ПеремещениеМатериаловВЭксплуатацииМатериалы.Номенклатура,
	|	ПеремещениеМатериаловВЭксплуатацииМатериалы.ДокументПередачи КАК ДокументВыдачи,
	|	ПеремещениеМатериаловВЭксплуатацииМатериалы.Количество
	|ПОМЕСТИТЬ ДокументыПеремещенияСписание
	|ИЗ
	|	Документ.ПеремещениеМатериаловВЭксплуатации.Материалы КАК ПеремещениеМатериаловВЭксплуатацииМатериалы
	|ГДЕ
	|	ПеремещениеМатериаловВЭксплуатацииМатериалы.Ссылка.Проведен = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписаниеМатериаловИзЭксплуатацииМатериалы.Номенклатура,
	|	СписаниеМатериаловИзЭксплуатацииМатериалы.ФизЛицо,
	|	СписаниеМатериаловИзЭксплуатацииМатериалы.ХарактеристикаНоменклатуры,
	|	СписаниеМатериаловИзЭксплуатацииМатериалы.Ссылка.Дата,
	|	СписаниеМатериаловИзЭксплуатацииМатериалы.Ссылка,
	|	СписаниеМатериаловИзЭксплуатацииМатериалы.ДокументПередачи КАК ДокументВыдачи,
	|	СписаниеМатериаловИзЭксплуатацииМатериалы.Количество
	|ПОМЕСТИТЬ ДокументыСписания
	|ИЗ
	|	Документ.СписаниеМатериаловИзЭксплуатации.Материалы КАК СписаниеМатериаловИзЭксплуатацииМатериалы
	|ГДЕ
	|	СписаниеМатериаловИзЭксплуатацииМатериалы.Ссылка.Проведен = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВозвратМатериаловИзЭксплуатацииМатериалы.Номенклатура,
	|	ВозвратМатериаловИзЭксплуатацииМатериалы.ФизЛицо,
	|	ВозвратМатериаловИзЭксплуатацииМатериалы.ХарактеристикаНоменклатуры,
	|	ВозвратМатериаловИзЭксплуатацииМатериалы.Ссылка.Дата,
	|	ВозвратМатериаловИзЭксплуатацииМатериалы.Ссылка,
	|	ВозвратМатериаловИзЭксплуатацииМатериалы.ДокументПередачи КАК ДокументВыдачи,
	|	ВозвратМатериаловИзЭксплуатацииМатериалы.Количество
	|ПОМЕСТИТЬ ДокументыВозвратов
	|ИЗ
	|	Документ.ВозвратМатериаловИзЭксплуатации.Материалы КАК ВозвратМатериаловИзЭксплуатацииМатериалы
	|ГДЕ
	|	ВозвратМатериаловИзЭксплуатацииМатериалы.Ссылка.Проведен = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФизЛица.Организация,
	|	ДокументыПередачи.Номенклатура,
	|	ДокументыПередачи.ФизЛицо,
	|	ДокументыПередачи.ХарактеристикаНоменклатуры,
	|	ДокументыПередачи.Ссылка,
	|	ДокументыПередачи.НазначениеИспользования КАК НазначениеИспользования,
	|	ДокументыПередачи.Ссылка КАК ДокументВыдачи,
	|	ДокументыПередачи.Количество
	|ПОМЕСТИТЬ ТабМатериалыВЭксплуатации
	|ИЗ
	|	ФизЛица КАК ФизЛица
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыПередачи КАК ДокументыПередачи
	|		ПО (ДокументыПередачи.ФизЛицо = ФизЛица.Физлицо)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ФизЛица.Организация,
	|	ДокументыПеремещенияПоступление.Номенклатура,
	|	ДокументыПеремещенияПоступление.ФизЛицоПолучатель,
	|	ДокументыПеремещенияПоступление.ХарактеристикаНоменклатуры,
	|	ДокументыПеремещенияПоступление.Ссылка,
	|	ДокументыПеремещенияПоступление.НазначениеИспользованияПолучатель,
	|	ДокументыПеремещенияПоступление.ДокументВыдачи,
	|	ДокументыПеремещенияПоступление.Количество
	|ИЗ
	|	ДокументыПеремещенияПоступление КАК ДокументыПеремещенияПоступление
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ФизЛица КАК ФизЛица
	|		ПО ДокументыПеремещенияПоступление.ФизЛицоПолучатель = ФизЛица.Физлицо
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ФизЛица.Организация,
	|	ДокументыВводаОстатков.Номенклатура,
	|	ДокументыВводаОстатков.ФизЛицо,
	|	ДокументыВводаОстатков.ХарактеристикаНоменклатуры,
	|	ДокументыВводаОстатков.Ссылка,
	|	ДокументыВводаОстатков.НазначениеИспользования,
	|	ДокументыВводаОстатков.ДокументВыдачи,
	|	ДокументыВводаОстатков.Количество
	|ИЗ
	|	ФизЛица КАК ФизЛица
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыВводаОстатков КАК ДокументыВводаОстатков
	|		ПО (ДокументыВводаОстатков.ФизЛицо = ФизЛица.Физлицо)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабМатериалыВЭксплуатации.ФизЛицо,
	|	ТабМатериалыВЭксплуатации.Номенклатура,
	|	ТабМатериалыВЭксплуатации.ХарактеристикаНоменклатуры,
	|	ТабМатериалыВЭксплуатации.НазначениеИспользования,
	|	ТабМатериалыВЭксплуатации.ДокументВыдачи.Дата КАК ДатаВыдачи,
	|	ТабМатериалыВЭксплуатации.ДокументВыдачи.Ссылка КАК ДокументВыдачи,
	|	ВЫБОР
	|		КОГДА ДокументыСписания.Ссылка ЕСТЬ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ДокументыВозвратов.Ссылка ЕСТЬ NULL 
	|						ТОГДА ДокументыПеремещенияСписание.Ссылка.Дата
	|					ИНАЧЕ ДокументыВозвратов.Ссылка.Дата
	|				КОНЕЦ
	|		ИНАЧЕ ДокументыСписания.Ссылка.Дата
	|	КОНЕЦ КАК ДатаВыбытия,
	|	ВЫБОР
	|		КОГДА ДокументыСписания.Ссылка ЕСТЬ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ДокументыВозвратов.Ссылка ЕСТЬ NULL 
	|						ТОГДА ДокументыПеремещенияСписание.Ссылка
	|					ИНАЧЕ ДокументыВозвратов.Ссылка
	|				КОНЕЦ
	|		ИНАЧЕ ДокументыСписания.Ссылка
	|	КОНЕЦ КАК ДокументВыбытия,
	|	ФизЛица.ТекущееПодразделениеОрганизации,
	|	ФизЛица.ТекущаяДолжностьОрганизации,
	|	ФизЛица.ДатаПриемаНаРаботу,
	|	ФизЛица.ДатаУвольнения,
	|	ГОСТ.СтрокаГОСТ КАК СтрокаГОСТ,
	|	ТабМатериалыВЭксплуатации.Организация,
	|	ТабМатериалыВЭксплуатации.Количество КАК КоличествоВыдано,
	|	ВЫБОР
	|		КОГДА ДокументыСписания.Ссылка ЕСТЬ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ДокументыВозвратов.Ссылка ЕСТЬ NULL 
	|						ТОГДА ДокументыПеремещенияСписание.Количество
	|					ИНАЧЕ ДокументыВозвратов.Количество
	|				КОНЕЦ
	|		ИНАЧЕ ДокументыСписания.Количество
	|	КОНЕЦ КАК КоличествоВозвращено
	|ИЗ
	|	ТабМатериалыВЭксплуатации КАК ТабМатериалыВЭксплуатации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДокументыСписания КАК ДокументыСписания
	|		ПО ТабМатериалыВЭксплуатации.Номенклатура = ДокументыСписания.Номенклатура
	|			И ТабМатериалыВЭксплуатации.ФизЛицо = ДокументыСписания.ФизЛицо
	|			И ТабМатериалыВЭксплуатации.ДокументВыдачи = ДокументыСписания.ДокументВыдачи
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДокументыПеремещенияСписание КАК ДокументыПеремещенияСписание
	|		ПО ТабМатериалыВЭксплуатации.Номенклатура = ДокументыПеремещенияСписание.Номенклатура
	|			И ТабМатериалыВЭксплуатации.ФизЛицо = ДокументыПеремещенияСписание.ФизЛицо
	|			И ТабМатериалыВЭксплуатации.ДокументВыдачи = ДокументыПеремещенияСписание.ДокументВыдачи
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДокументыВозвратов КАК ДокументыВозвратов
	|		ПО ТабМатериалыВЭксплуатации.Номенклатура = ДокументыВозвратов.Номенклатура
	|			И ТабМатериалыВЭксплуатации.ФизЛицо = ДокументыВозвратов.ФизЛицо
	|			И ТабМатериалыВЭксплуатации.ДокументВыдачи = ДокументыВозвратов.ДокументВыдачи
	|		ЛЕВОЕ СОЕДИНЕНИЕ ФизЛица КАК ФизЛица
	|		ПО ТабМатериалыВЭксплуатации.ФизЛицо = ФизЛица.Физлицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ГОСТ КАК ГОСТ
	|		ПО ТабМатериалыВЭксплуатации.Номенклатура = ГОСТ.Номенклатура";
	
	
	
	
	// ограничение срезов
	Если ОтборПодразделения Тогда
		//Подразделения можно отобрать только по справочнику сотрудников
		ЗапросСПО.Текст = СтрЗаменить(ЗапросСПО.Текст, ".ТекущееПодразделениеОрганизации = &Подразделение", ".ТекущееПодразделениеОрганизации " + ВидСравненияПодразделение);		 
	Иначе
		ЗапросСПО.Текст = СтрЗаменить(ЗапросСПО.Текст, "И СотрудникиОрганизаций.ТекущееПодразделениеОрганизации = &Подразделение", "");		 
	КонецЕсли;	
	
	Если ОтборОрганизации Тогда
		ЗапросСПО.Текст = СтрЗаменить(ЗапросСПО.Текст, ".Организация = &Организация", ".Организация " + ВидСравненияОрганизацииСтрокой + " (&ГоловнаяОрганизация)");		 
	Иначе
		ЗапросСПО.Текст = СтрЗаменить(ЗапросСПО.Текст, "И СотрудникиОрганизаций.Организация = &Организация", "");	
	КонецЕсли;	
	
	Если ОтборРаботника Тогда
		ЗапросСПО.Текст = СтрЗаменить(ЗапросСПО.Текст, ".Физлицо = &РаботникиОрганизации", ".Физлицо " + ВидСравненияРаботник + " (&РаботникиОрганизации)");		 
	Иначе
		ЗапросСПО.Текст = СтрЗаменить(ЗапросСПО.Текст, "И СотрудникиОрганизаций.Физлицо = &РаботникиОрганизации", "");		 
	КонецЕсли;	
	
	РезультатЗапроса =  ЗапросСПО.Выполнить();
	ТаблВыданнойСпецодежды = РезультатЗапроса.Выгрузить();
	
	Возврат ТаблВыданнойСпецодежды;
	
КонецФункции // ПолучитьРезультатЗапроса()

Функция РассчитатьПроцентИзноса(НазначениеИспользования,ДатаВыдачи,ДатаСписания)
	
	Если НазначениеИспользования.СрокПолезногоИспользования <> 0 Тогда
		ДатаВыдачи1 = НачалоМесяца(ДатаВыдачи);
		ДатаСписания1 = НачалоМесяца(ДатаСписания);
		Если ДатаВыдачи1 = ДатаСписания1 Тогда
			Возврат 0;
		КонецЕсли; 
		
		СчМесяцев = 1;
		Пока ДатаВыдачи1<ДатаСписания1 Цикл
			ДатаВыдачи1 = ДобавитьМесяц(ДатаВыдачи1,1);
			Если ДатаВыдачи1 = ДатаСписания1 Тогда
				ПроцентСписания = Окр(100*СчМесяцев/НазначениеИспользования.СрокПолезногоИспользования,1);
				Если ПроцентСписания > 100 Тогда
					Возврат 100;
				Иначе
					Возврат ПроцентСписания;
				КонецЕсли; 
			КонецЕсли; 
			СчМесяцев = СчМесяцев + 1;
		КонецЦикла; 
		
	КонецЕсли; 
	
	Возврат 0;
	
КонецФункции

#КонецОбласти