#Область ОбработчикиСобытийФормы

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ЭлементыФормы.ПолеВидаСравненияОрганизация.СписокВыбора = УправлениеОтчетами.ПолучитьСписокВидовСравненияПоТипу(Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ВидСравненияОрганизации     = ВидСравнения.Равно;
	Организация = ОбщегоНазначения.ПустоеЗначениеТипа("СправочникСсылка.Организации");
	
	ЭлементыФормы.ПолеВидаСравненияРаботник.СписокВыбора = УправлениеОтчетами.ПолучитьСписокВидовСравненияПоТипу(Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	ВидСравненияРаботника     = ВидСравнения.Равно;
	Работник = ОбщегоНазначения.ПустоеЗначениеТипа("СправочникСсылка.ФизическиеЛица");
	
	ЭлементыФормы.ПолеВидаСравненияПодразделение.СписокВыбора = УправлениеОтчетами.ПолучитьСписокВидовСравненияПоТипу(Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	ВидСравненияПодразделения     = ВидСравнения.Равно;
	Подразделение = ОбщегоНазначения.ПустоеЗначениеТипа("СправочникСсылка.ПодразделенияОрганизаций");
	
	УстановитьВидимостьПанелиБыстрогоОтбора(); 
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ОбновитьЗаголовокОкна();
	
	ДатаОтчета = РабочаяДата;
	
	ТиповыеНормы = ВосстановитьЗначение("ЛичнаяКарточка_ТиповыеНормы");
	Если НЕ ЗначениеЗаполнено(ТиповыеНормы) Тогда
		ТиповыеНормы = "Типовые отраслевые нормы";
	КонецЕсли;

КонецПроцедуры

Процедура ПриЗакрытии()
	
	Если ЗначениеЗаполнено(ТиповыеНормы) Тогда
		СохранитьЗначение("ЛичнаяКарточка_ТиповыеНормы", ТиповыеНормы);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеВосстановленияЗначений()
	
	Если ТипЗнч(Работник) = Тип("СписокЗначений") Тогда
		ЭлементыФормы.ПолеНастройкиРаботник.ОграничениеТипа	= Новый ОписаниеТипов("СписокЗначений");
	Иначе
		ЭлементыФормы.ПолеНастройкиРаботник.ОграничениеТипа	= Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица");
	КонецЕсли;
	
	Если ТипЗнч(Подразделение) = Тип("СписокЗначений") Тогда
		ЭлементыФормы.ПолеНастройкиПодразделение.ОграничениеТипа = Новый ОписаниеТипов("СписокЗначений");
	Иначе
		ЭлементыФормы.ПолеНастройкиПодразделение.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций");
	КонецЕсли;
	
	Если ТипЗнч(Организация) = Тип("СписокЗначений") Тогда
		ЭлементыФормы.ПолеНастройкиОрганизация.ОграничениеТипа = Новый ОписаниеТипов("СписокЗначений");
	Иначе
		ЭлементыФормы.ПолеНастройкиОрганизация.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Организации");
	КонецЕсли;
	
	ОбновитьЗаголовокОкна();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

Процедура ФлажокНастройкиОрганизацияПриИзменении(Элемент)
	
	ОбновитьЗаголовокОкна();
	
КонецПроцедуры

Процедура ПолеВидаСравненияОрганизацияПриИзменении(Элемент)
	
	Если ТипЗнч(Организация) = Тип("СправочникСсылка.Организации") Тогда
		ЗаписываемоеЗначение = Организация;                                                               
	Иначе
		Если Организация.Количество() = 0 Тогда    
			ЗаписываемоеЗначение = ОбщегоНазначения.ПустоеЗначениеТипа("СправочникСсылка.Организации");
		Иначе
			ЗаписываемоеЗначение = Организация[0].Значение;
		КонецЕсли;
	КонецЕсли;
	
	Если Элемент.Значение = ВидСравнения.ВСписке ИЛИ Элемент.Значение = ВидСравнения.НеВСписке Тогда
		
		ЭлементыФормы.ПолеНастройкиОрганизация.ОграничениеТипа = Новый ОписаниеТипов("СписокЗначений");
        Организация = Новый СписокЗначений;
		Если ЗначениеЗаполнено(ЗаписываемоеЗначение) Тогда
			Организация.Добавить(ЗаписываемоеЗначение);
		КонецЕсли;
		
	Иначе              
		
		ЭлементыФормы.ПолеНастройкиОрганизация.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Организации");
		Организация = ЗаписываемоеЗначение;
		
	КонецЕсли; 
	
	ОбновитьЗаголовокОкна();
	
КонецПроцедуры

Процедура ПолеНастройкиОрганизацияПриИзменении(Элемент)

	Если ТипЗнч(Элемент.Значение) = Тип("СправочникСсылка.Организации") Тогда
	
		Если Элемент.Значение.Пустая() Тогда
			ЭлементыФормы.ФлажокНастройкиОрганизация.Значение = Ложь;
		Иначе
			ЭлементыФормы.ФлажокНастройкиОрганизация.Значение = Истина;
		КонецЕсли; 
		
	Иначе // Список значений
	
		Если Элемент.Значение.Количество() = 0 Тогда
			ЭлементыФормы.ФлажокНастройкиОрганизация.Значение = Ложь;
		Иначе
			ЭлементыФормы.ФлажокНастройкиОрганизация.Значение = Истина;
		КонецЕсли;
	
	КонецЕсли; 
	
	ОбновитьЗаголовокОкна();
	
КонецПроцедуры

Процедура ПолеВидаСравненияПодразделениеПриИзменении(Элемент)
	
	Если ТипЗнч(Подразделение) = Тип("СправочникСсылка.ПодразделенияОрганизаций") Тогда
		ЗаписываемоеЗначение = Подразделение;                                                               
	Иначе
		Если Подразделение.Количество() = 0 Тогда    
			ЗаписываемоеЗначение = ОбщегоНазначения.ПустоеЗначениеТипа("СправочникСсылка.ПодразделенияОрганизаций");
		Иначе
			ЗаписываемоеЗначение = Подразделение[0].Значение;
		КонецЕсли;
	КонецЕсли;
	
	Если Элемент.Значение = ВидСравнения.ВСписке ИЛИ Элемент.Значение = ВидСравнения.ВСпискеПоИерархии
		ИЛИ Элемент.Значение = ВидСравнения.НеВСписке ИЛИ Элемент.Значение = ВидСравнения.НеВСпискеПоИерархии Тогда
		
		ЭлементыФормы.ПолеНастройкиПодразделение.ОграничениеТипа = Новый ОписаниеТипов("СписокЗначений");
        Подразделение = Новый СписокЗначений;
		Если ЗначениеЗаполнено(ЗаписываемоеЗначение) Тогда
			Подразделение.Добавить(ЗаписываемоеЗначение);
		КонецЕсли;
		
	Иначе              
		
		ЭлементыФормы.ПолеНастройкиПодразделение.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций");
		Подразделение = ЗаписываемоеЗначение;
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПолеНастройкиПодразделениеПриИзменении(Элемент)
	
	Если ТипЗнч(Элемент.Значение) = Тип("СписокЗначений") Тогда
		ОтборПодразделения = Элемент.Значение.Количество() > 0;
	Иначе
		ОтборПодразделения = Не Элемент.Значение.Пустая();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПолеВидаСравненияРаботникПриИзменении(Элемент)
	
	Если ТипЗнч(Работник) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		ЗаписываемоеЗначение = Работник;                                                               
	Иначе
		Если Работник.Количество() = 0 Тогда    
			ЗаписываемоеЗначение = ОбщегоНазначения.ПустоеЗначениеТипа("СправочникСсылка.ФизическиеЛица");
		Иначе
			ЗаписываемоеЗначение = Работник[0].Значение;
		КонецЕсли;
	КонецЕсли;
	
	Если Элемент.Значение = ВидСравнения.ВСписке ИЛИ Элемент.Значение = ВидСравнения.ВСпискеПоИерархии
		ИЛИ Элемент.Значение = ВидСравнения.НеВСписке ИЛИ Элемент.Значение = ВидСравнения.НеВСпискеПоИерархии Тогда
		
		ЭлементыФормы.ПолеНастройкиРаботник.ОграничениеТипа	  = Новый ОписаниеТипов("СписокЗначений");
        Работник = Новый СписокЗначений;
		Если ЗначениеЗаполнено(ЗаписываемоеЗначение) Тогда
			Работник.Добавить(ЗаписываемоеЗначение);
		КонецЕсли;
		
	Иначе              
		
		ЭлементыФормы.ПолеНастройкиРаботник.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица");
		Работник = ЗаписываемоеЗначение;
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПолеНастройкиРаботникПриИзменении(Элемент)
	
	Если ТипЗнч(Элемент.Значение) = Тип("СписокЗначений") Тогда
		
		Если Элемент.Значение.Количество() = 0 Тогда
			ЭлементыФормы.ФлажокНастройкиРаботник.Значение = Ложь;
		Иначе
			ЭлементыФормы.ФлажокНастройкиРаботник.Значение = Истина;
		КонецЕсли; 
		
	Иначе
		
		Если Элемент.Значение.Пустая() Тогда
			ЭлементыФормы.ФлажокНастройкиРаботник.Значение = Ложь;
		Иначе
			ЭлементыФормы.ФлажокНастройкиРаботник.Значение = Истина;
		КонецЕсли; 
		
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьДопРеквизиты(Элемент)
	
	//Установка дополнительных реквизитов справочников
	
	Если Вопрос("В справочники физических лиц и номенклатуры будут установлены дополнительные реквизиты. Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет  Тогда
		Возврат;
	КонецЕсли; 
	
	//Определим уже существующие доп. свойства номенклатуры
	ЗапросПарам = Новый Запрос;
	ЗапросПарам.УстановитьПараметр("НазначениеСвойства", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Номенклатура);
	
	ЗапросПарам.Текст = 
	"ВЫБРАТЬ
	|	СвойстваОбъектов.Ссылка,
	|	СвойстваОбъектов.Наименование,
	|	СвойстваОбъектов.ТипЗначения,
	|	СвойстваОбъектов.Представление
	|ИЗ
	|	ПланВидовХарактеристик.СвойстваОбъектов КАК СвойстваОбъектов
	|ГДЕ
	|	СвойстваОбъектов.НазначениеСвойства = &НазначениеСвойства";
	ТабДопСвойств =  ЗапросПарам.Выполнить().Выгрузить();
	
	Если ТабДопСвойств.Найти("ГОСТ","Наименование") = Неопределено Тогда
		НовоеСвойство = ПланыВидовХарактеристик.СвойстваОбъектов.СоздатьЭлемент();
		НовоеСвойство.Наименование = "ГОСТ";
		НовоеСвойство.НазначениеСвойства = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Номенклатура;
		КС = Новый КвалификаторыСтроки(20);
		НовоеСвойство.ТипЗначения = Новый ОписаниеТипов("Строка",,КС);
		НовоеСвойство.Записать();
	КонецЕсли;
	
	//Определим уже существующие доп. свойства Физ. лица
	ЗапросПарам = Новый Запрос;
	ЗапросПарам.УстановитьПараметр("НазначениеСвойства", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ФизическиеЛица);
	
	ЗапросПарам.Текст = 
	"ВЫБРАТЬ
	|	СвойстваОбъектов.Ссылка,
	|	СвойстваОбъектов.Наименование,
	|	СвойстваОбъектов.ТипЗначения,
	|	СвойстваОбъектов.Представление
	|ИЗ
	|	ПланВидовХарактеристик.СвойстваОбъектов КАК СвойстваОбъектов
	|ГДЕ
	|	СвойстваОбъектов.НазначениеСвойства = &НазначениеСвойства";
	ТабДопСвойств =  ЗапросПарам.Выполнить().Выгрузить();
	
	Если ТабДопСвойств.Найти("Рост","Наименование") = Неопределено Тогда
		НовоеСвойство = ПланыВидовХарактеристик.СвойстваОбъектов.СоздатьЭлемент();
		НовоеСвойство.Наименование = "Рост";
		НовоеСвойство.НазначениеСвойства = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ФизическиеЛица;
		КС = Новый КвалификаторыЧисла(3,0);
		НовоеСвойство.ТипЗначения = Новый ОписаниеТипов("Число",,КС);
		НовоеСвойство.Записать();
	КонецЕсли;
	
	Если ТабДопСвойств.Найти("Размер одежды","Наименование") = Неопределено Тогда
		НовоеСвойство = ПланыВидовХарактеристик.СвойстваОбъектов.СоздатьЭлемент();
		НовоеСвойство.Наименование = "Размер одежды";
		НовоеСвойство.НазначениеСвойства = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ФизическиеЛица;
		КС = Новый КвалификаторыЧисла(2,0);
		НовоеСвойство.ТипЗначения = Новый ОписаниеТипов("Число",,КС);
		НовоеСвойство.Записать();
	КонецЕсли;
	
	Если ТабДопСвойств.Найти("Размер обуви","Наименование") = Неопределено Тогда
		НовоеСвойство = ПланыВидовХарактеристик.СвойстваОбъектов.СоздатьЭлемент();
		НовоеСвойство.Наименование = "Размер обуви";
		НовоеСвойство.НазначениеСвойства = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ФизическиеЛица;
		КС = Новый КвалификаторыЧисла(2,0);
		НовоеСвойство.ТипЗначения = Новый ОписаниеТипов("Число",,КС);
		НовоеСвойство.Записать();
	КонецЕсли;

	Если ТабДопСвойств.Найти("Размер головного убора","Наименование") = Неопределено Тогда
		НовоеСвойство = ПланыВидовХарактеристик.СвойстваОбъектов.СоздатьЭлемент();
		НовоеСвойство.Наименование = "Размер головного убора";
		НовоеСвойство.НазначениеСвойства = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ФизическиеЛица;
		КС = Новый КвалификаторыЧисла(2,0);
		НовоеСвойство.ТипЗначения = Новый ОписаниеТипов("Число",,КС);
		НовоеСвойство.Записать();
	КонецЕсли;
	
	Если ТабДопСвойств.Найти("Размер противогаза","Наименование") = Неопределено Тогда
		НовоеСвойство = ПланыВидовХарактеристик.СвойстваОбъектов.СоздатьЭлемент();
		НовоеСвойство.Наименование = "Размер противогаза";
		НовоеСвойство.НазначениеСвойства = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ФизическиеЛица;
		КС = Новый КвалификаторыЧисла(2,0);
		НовоеСвойство.ТипЗначения = Новый ОписаниеТипов("Число",,КС);
		НовоеСвойство.Записать();
	КонецЕсли;
	
	Если ТабДопСвойств.Найти("Размер респиратора","Наименование") = Неопределено Тогда
		НовоеСвойство = ПланыВидовХарактеристик.СвойстваОбъектов.СоздатьЭлемент();
		НовоеСвойство.Наименование = "Размер респиратора";
		НовоеСвойство.НазначениеСвойства = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ФизическиеЛица;
		КС = Новый КвалификаторыЧисла(2,0);
		НовоеСвойство.ТипЗначения = Новый ОписаниеТипов("Число",,КС);
		НовоеСвойство.Записать();
	КонецЕсли;
	
	Если ТабДопСвойств.Найти("Размер рукавиц","Наименование") = Неопределено Тогда
		НовоеСвойство = ПланыВидовХарактеристик.СвойстваОбъектов.СоздатьЭлемент();
		НовоеСвойство.Наименование = "Размер рукавиц";
		НовоеСвойство.НазначениеСвойства = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ФизическиеЛица;
		КС = Новый КвалификаторыЧисла(2,0);
		НовоеСвойство.ТипЗначения = Новый ОписаниеТипов("Число",,КС);
		НовоеСвойство.Записать();
	КонецЕсли;
	
	Если ТабДопСвойств.Найти("Размер перчаток","Наименование") = Неопределено Тогда
		НовоеСвойство = ПланыВидовХарактеристик.СвойстваОбъектов.СоздатьЭлемент();
		НовоеСвойство.Наименование = "Размер перчаток";
		НовоеСвойство.НазначениеСвойства = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ФизическиеЛица;
		КС = Новый КвалификаторыЧисла(2,0);
		НовоеСвойство.ТипЗначения = Новый ОписаниеТипов("Число",,КС);
		НовоеСвойство.Записать();
	КонецЕсли;
	
	Предупреждение("Установка завершена");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

Процедура ДействияФормыСформировать(Кнопка)
	
	СформироватьОтчет(ЭлементыФормы.ДокументРезультат);

	ТекущийЭлемент = ЭлементыФормы.ДокументРезультат;
	
КонецПроцедуры

Процедура ДействияФормыОтбор(Кнопка)
	
	УстановитьВидимостьПанелиБыстрогоОтбора();
	
КонецПроцедуры

Процедура ДействияФормыНаПринтер(Кнопка)
	
	ЭлементыФормы.ДокументРезультат.Напечатать();

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьВидимостьПанелиБыстрогоОтбора()
	
	Если НЕ ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх Тогда
		
		ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх;
		ЭлементыФормы.ДействияФормы.Кнопки.Отбор.Пометка = Ложь;
		ЭлементыФормы.ДействияФормы.Кнопки.Подменю.Кнопки.Отбор.Пометка = Ложь;
		
	Иначе
		
		ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Нет;
		ЭлементыФормы.ДействияФормы.Кнопки.Отбор.Пометка = Истина;
		ЭлементыФормы.ДействияФормы.Кнопки.Подменю.Кнопки.Отбор.Пометка = Истина;
		
	КонецЕсли;

КонецПроцедуры

Процедура ОбновитьЗаголовокОкна()

	Если ОтборОрганизации Тогда
		
		Если ТипЗнч(Организация) = Тип("СправочникСсылка.Организации") Тогда
			
			Если Организация = Справочники.Организации.ПустаяСсылка() Тогда
				Заголовок = "Личная карточка выдачи СИЗ по организации: <Не задано значение>";
			Иначе
				Заголовок = "Личная карточка выдачи СИЗ по организации: " + Организация;
			КонецЕсли; 
			
		Иначе
			
			Если Организация.Количество() = 0 Тогда
				Заголовок = "Личная карточка выдачи СИЗ по списку организаций: <Не задано значение>";
			Иначе
				Заголовок = "Личная карточка выдачи СИЗ по списку организаций: " + Организация;
			КонецЕсли; 
			
		КонецЕсли;
		
	Иначе
		Заголовок = "Личная карточка выдачи СИЗ";
	КонецЕсли; 	
	
КонецПроцедуры

#КонецОбласти